name: AI Code Review (Hugging Face)

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write   # required to comment on PRs

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          repository: ${{ github.repository }}

      - name: Get PR diff
        run: |
          # Fetch the base branch (the branch PR is targeting)
          git fetch origin ${{ github.event.pull_request.base.ref }}

          # Fetch the PR head safely using pull request number
          git fetch origin pull/${{ github.event.pull_request.number }}/head:pr-${{ github.event.pull_request.number }}

          # Generate diff between base and PR head
          git diff origin/${{ github.event.pull_request.base.ref }}...pr-${{ github.event.pull_request.number }} > changes.diff

      - name: Run AI Review with HuggingFace
        run: |
          pip install requests jq
          DIFF=$(cat changes.diff | head -c 4000)

          # Build JSON safely
          PAYLOAD=$(jq -n --arg prompt "You are a code reviewer. Review this code diff for bugs, readability, and improvements. Be concise and helpful:\n$DIFF" '{inputs: $prompt}')

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.HF_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            https://api-inference.huggingface.co/models/TechxGenus/starcoder2-3b-instruct)

          echo "Raw response: $RESPONSE"

          # Always create review.txt with header
          echo "### 🤖 AI Code Review" > review.txt
          echo "" >> review.txt

          # Parse safely: JSON or fallback
          if echo "$RESPONSE" | jq empty 2>/dev/null; then
            echo "$RESPONSE" | jq -r '
              if type=="array" and .[0].generated_text then .[0].generated_text
              elif .error then "⚠️ Hugging Face Error: " + .error
              else "🤖 AI Review could not generate feedback, but your code was processed."
              end
            ' >> review.txt
          else
            echo "⚠️ Hugging Face returned non-JSON response: $RESPONSE" >> review.txt
          fi

          # Ensure not empty
          if [ ! -s review.txt ]; then
            echo "🤖 AI Review did not return any result, but the workflow ran successfully." >> review.txt
          fi

      - name: Comment on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: review.txt
