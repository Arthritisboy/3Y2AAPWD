name: Release

on:
  push:
    branches:
      - release

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Node.js dependencies
        run: npm install

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
          cache: true

      - name: Cache Flutter pub packages
        id: flutter-pub-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            frontend/.dart_tool
          key: pub-${{ runner.os }}-${{ hashFiles('frontend/pubspec.lock') }}
          restore-keys: |
            pub-${{ runner.os }}-

      - name: Get Flutter packages
        if: steps.flutter-pub-cache.outputs.cache-hit != 'true'
        working-directory: frontend
        run: flutter pub get

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
          cache: true

      - name: Build APK
        working-directory: frontend
        run: flutter build apk --release

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: frontend/build/app/outputs/flutter-apk/app-release.apk

  release:
    runs-on: ubuntu-latest
    needs: [dependencies, build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

        